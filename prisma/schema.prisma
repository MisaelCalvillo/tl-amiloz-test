// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  idDocumentNumber  String    @unique
  firstName         String
  lastName          String
  password          String
  email             String    @unique
  phone             String    @unique
  roleId            String
  role              Role      @relation(fields: [roleId], references: [id])
  offers            Offer[]
  loans             Loan[]

  @@map("users")
}

model Role {
  id          String    @id @default(uuid())
  description String
  users       User[]

  @@map("roles")
}

model PaymentFrequency {
  id          String    @id
  description String
  days        Int
  offers      Offer[]

  @@map("payment_frequencies")
}

model Offer {
  id                  String           @id @default(uuid())
  userId              String
  amount              Float
  interestRate        Float
  termInDays          Int
  installments        Int
  installmentAmount   Float
  totalAmount         Float
  paymentFrequencyId  String
  status              String
  loan                Loan?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  user                User             @relation(fields: [userId], references: [id])
  paymentFrequency    PaymentFrequency @relation(fields: [paymentFrequencyId], references: [id])

  @@map("offers")
}

model Loan {
  id              String        @id @default(uuid())
  userId          String
  offerId         String        @unique
  totalAmount     Float
  remainingAmount Float
  status          String
  approvedAt      DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  user            User          @relation(fields: [userId], references: [id])
  offer           Offer         @relation(fields: [offerId], references: [id])
  installments    Installment[]

  @@map("loans")
}

model Installment {
  id              String    @id @default(uuid())
  loanId          String
  amount          Float
  dueDate         DateTime
  status          String
  paidAmount      Float     @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  loan            Loan      @relation(fields: [loanId], references: [id])
  payments        Payment[]

  @@map("installments")
}

model Payment {
  id              String     @id @default(uuid())
  installmentId   String
  amount          Float
  status          String
  paymentPlatform String
  platformPaymentId String?
  paymentMethod   String?
  paidAt          DateTime?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  installment     Installment @relation(fields: [installmentId], references: [id])

  @@map("payments")
}